=== modified file 'src/Tweaks.vala'
--- src/Tweaks.vala     2013-07-01 19:30:29 +0000
+++ src/Tweaks.vala     2013-07-01 20:18:44 +0000
@@ -19,159 +19,49 @@
 
 public class TweaksPlug : Pantheon.Switchboard.Plug
 {
+       Gtk.Notebook notebook;
+
     public TweaksPlug ()
     {
-        Gtk.Notebook notebook = new Gtk.Notebook ();
-        var all_grid = new Gtk.Grid ();
-
-        /* Overview Tab */
-        var grid = new Gtk.Grid ();
-        grid.set_hexpand (true);
-        grid.set_vexpand (false);
-
-        var back = new Gtk.ToolButton.from_stock (Gtk.Stock.GO_BACK);
-        back.halign = Gtk.Align.START;
-        back.sensitive = false;
-        back.margin_left = 1;
-
-        var title_label = new Gtk.Label ("<big><b>" + _("Overview") + "</b></big>");
-        title_label.margin_right = 12;
-        title_label.use_markup = true;
-        title_label.halign = Gtk.Align.END;
-
-        back.clicked.connect (() => {
-        back.sensitive = false;
-        notebook.page = 0;
-        title_label.label = "<big><b>" + _("Overview") + "</b></big>";
-        });
-
-        all_grid.attach (back, 0, 0, 1, 1);
-        all_grid.attach (title_label, 1, 0, 1, 1);
+        notebook = new Gtk.Notebook ();
 
         /* Notebook */
         notebook.set_margin_top (0);
-        notebook.show_tabs = false;
-        notebook.scrollable = true;
-//        notebook.tab_pos =  Gtk.PositionType.LEFT;
-
-        /* Overview */
-        notebook.append_page (grid, new Gtk.Label (_("Overview")));
+        notebook.tab_pos =  Gtk.PositionType.LEFT;
 
         /* Appearances Tab */
-        notebook.append_page (new AppearanceGrid (), new Gtk.Label (_("Appearance") + ":" + _("General") + ":preferences-desktop-wallpaper"));
+        add_page (new AppearanceGrid (), _("Appearance"), "preferences-desktop-wallpaper");
 
         /* Font Tab*/
-        notebook.append_page (new FontsGrid (), new Gtk.Label (_("Fonts") + ":" + _("General") + ":font-x-generic"));
+        add_page (new FontsGrid (), _("Fonts"), "font-x-generic");
 
         /* Animations Tab */
-        notebook.append_page (new AnimationsGrid (), new Gtk.Label (_("Animations") + ":" + _("General") + ":preferences-desktop-default-applications"));
+        add_page (new AnimationsGrid (), _("Animations"), ":preferences-desktop-default-applications");
 
         /* Shadows Tab*/
-        notebook.append_page (new ShadowsGrid (), new Gtk.Label (_("Shadows") + ":" + _("General") + ":preferences-desktop-default-applications"));
+        add_page (new ShadowsGrid (), _("Shadows"), "preferences-desktop-default-applications");
 
         /* Misc Tab*/
-        notebook.append_page (new MiscGrid (), new Gtk.Label (_("Miscellaneous") + ":" + _("General") + ":preferences-desktop-default-applications"));
+        add_page (new MiscGrid (), _("Miscellaneous"), "preferences-desktop-default-applications");
 
         /* Dock Tab*/
-        notebook.append_page (new DockGrid (), new Gtk.Label (_("Plank") + ":" + _("Applications") + ":system-file-manager"));
+        add_page (new DockGrid (), _("Plank"), "system-file-manager");
 
         /* Slingshot Tab*/
-        notebook.append_page (new SlingshotGrid (), new Gtk.Label (_("Slingshot") + ":" + _("Applications") + ":preferences-desktop-default-applications"));
-
-        /* Create Overview UI out of Notebook data */
-        string[] notebook_data = {};
-        for (int i = 0; i < notebook.get_n_pages() ; i++)
-            notebook_data += notebook.get_tab_label_text(notebook.get_nth_page (i));
-            int a = 0;
-            foreach(string str in CategorieView(notebook_data).split(":")) {
-                var general_label = new Gtk.Label ("<big><b>" + str + "</b></big>");
-                general_label.margin_left = 12;
-                general_label.use_markup = true;
-
-                var general_separator = new Gtk.Separator (Gtk.Orientation.HORIZONTAL);
-                general_separator.set_hexpand (true);
-
-                var general_box = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 0);
-                general_box.pack_start (general_label, false);
-                general_box.pack_start (general_separator, true);
-
-                grid.attach (general_box, 0, a, 1, 1);
-                a++;
-
-                int ITEM_WIDTH = 96;
-                int ITEM_PADDING = 10;
-                Gtk.IconTheme theme = Gtk.IconTheme.get_default ();
-
-                Gtk.ListStore model = new Gtk.ListStore (2, typeof (Gdk.Pixbuf), typeof (string));
-                var iter = Gtk.TreeIter();
-
-                Gtk.IconView view = new Gtk.IconView.with_model (model);
-                view.set_item_width (ITEM_WIDTH);
-                view.set_text_column (1);
-                view.set_pixbuf_column (0);
-                view.set_hexpand (true);
-                view.set_vexpand (false);
-
-                var bg_css = new Gtk.CssProvider ();
-
-                try {
-                    bg_css.load_from_data ("*{background-color:@background_color;}", -1);
-                } catch (Error e) { warning (e.message); }
-
-                view.get_style_context ().add_provider (bg_css, 20000);
-
-                Gdk.Pixbuf pixbuf = theme.load_icon ("preferences-desktop-wallpaper", 32, Gtk.IconLookupFlags.GENERIC_FALLBACK);
-
-                for (int i = 0; i < notebook.get_n_pages() ; i++) {
-                    string[] tab_string = notebook.get_tab_label_text(notebook.get_nth_page (i)).split(":");
-
-                    if(tab_string[1] == str) {
-                        pixbuf = theme.load_icon (tab_string[2], 32, Gtk.IconLookupFlags.GENERIC_FALLBACK);
-                        model.append (out iter);
-                        model.set (iter, 0, pixbuf, 1, tab_string[0]);
-                    }
-                }
-
-                view.selection_changed.connect (() => {
-                    List<Gtk.TreePath> paths = view.get_selected_items ();
-                    Value title;
-
-                    foreach (Gtk.TreePath path in paths) {
-                        bool tmp = model.get_iter (out iter, path);
-                        assert (tmp == true);
-
-                        for (int i = 0; i < notebook.get_n_pages() ; i++) {
-                            model.get_value (iter, 1, out title);
-
-                            if ( notebook.get_tab_label_text(notebook.get_nth_page (i)).contains((string) title)) {
-                                notebook.page = i;
-                                title_label.label = "<big><b>" + (string) title + "</b></big>";
-                                back.sensitive = true;
-                            }
-                        }
-                    }
-                });
-
-                grid.attach (view, 0, a, 1, 1);
-                a++;
-        }
-
-        all_grid.attach (notebook, 0, 1, 2, 1);
-        add (all_grid);
-    }
-
-    public string CategorieView(string[] notebook) {
-        string return_string = "";
-        foreach(string str in notebook) {
-            string[] split_string = str.split(":");
-            if ( return_string.contains(split_string[1]) == false ) {
-                if (return_string != "")
-                    return_string += ":";
-                return_string += split_string[1];
-            }
-        }
-        return return_string;
-    }
+        add_page (new SlingshotGrid (), _("Slingshot"), "preferences-desktop-default-applications");
+
+               add (notebook);
+    }
+
+       void add_page (Gtk.Widget page, string title, string icon) {
+               var box = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 6);
+               var label = new Gtk.Label (title);
+               label.xalign = 1.0f;
+               box.pack_start (label);
+               box.pack_start (new Gtk.Image.from_icon_name (icon, Gtk.IconSize.MENU), false);
+               box.show_all ();
+               notebook.append_page (page, box);
+       }
 }
 
 public static int main (string[] args) {
@@ -183,4 +73,4 @@
 
     Gtk.main ();
     return 0;
-}
\ No newline at end of file
+}